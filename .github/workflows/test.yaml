name: "Testing OpenRuntimes"

on: [ pull_request ]

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.prepare.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            ./**
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Prepare
        id: prepare
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: bun ./ci/index.ts

  open-runtimes:
    needs: prepare
    name: ${{ matrix.ID }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
      - name: Setup Composer
        run: |
          php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
          php composer-setup.php
          php -r "unlink('composer-setup.php');"
          mv composer.phar /usr/local/bin/composer
      - name: Install dependencies
        run: composer install
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Install shfmt
        run: |
          sudo apt-get update
          sudo apt-get install -y shfmt
      - name: Run tests
        working-directory: ./
        run: bash ci_tests.sh
        env:
          RUNTIME: ${{ matrix.RUNTIME }}
          ENTRYPOINT: ${{ matrix.ENTRYPOINT }}
          VERSION: ${{ matrix.VERSION }}
          INSTALL_COMMAND: ${{ matrix.INSTALL_COMMAND }}
          START_COMMAND: ${{ matrix.START_COMMAND }}
          TOOLS: ${{ matrix.TOOLS }}
          FORMATTER_CHECK: ${{ matrix.FORMATTER_CHECK }}
          FORMATTER_PREPARE: ${{ matrix.FORMATTER_PREPARE }}
          TEST_CLASS: ${{ matrix.TEST_CLASS }}
          OUTPUT_DIRECTORY: ${{ matrix.OUTPUT_DIRECTORY }}
          ENFORCED_RUNTIME: ${{ matrix.ENFORCED_RUNTIME }}
          ENFORCED_VERSION: ${{ matrix.ENFORCED_VERSION }}
      - name: Check shell script formatting
        run: shfmt -d .

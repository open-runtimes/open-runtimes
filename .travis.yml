dist: focal

arch:
  - amd64

services:
  - docker

os: linux

language: php

php:
  - 8.0

vm:
  size: large

env:
  global:
    - VERSION=v3
  jobs:
    # Node
    - RUNTIME=node-20.0
      TEST_CLASS=Base
      ENTRYPOINT=tests.js
      IMAGE=openruntimes/node:${VERSION}-20.0
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="npm install"
      OPEN_RUNTIMES_START_COMMAND="pm2 start src/server.js --no-daemon"
    - RUNTIME=node-20.0
      TEST_CLASS=Base
      ENTRYPOINT=tests.mjs
      IMAGE=openruntimes/node:${VERSION}-20.0
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="npm install"
      OPEN_RUNTIMES_START_COMMAND="pm2 start src/server.js --no-daemon"
    - RUNTIME=node-19.0
      TEST_CLASS=Base
      ENTRYPOINT=tests.js
      IMAGE=openruntimes/node:${VERSION}-19.0
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="npm install"
      OPEN_RUNTIMES_START_COMMAND="pm2 start src/server.js --no-daemon"
    - RUNTIME=node-19.0
      TEST_CLASS=Base
      ENTRYPOINT=tests.mjs
      IMAGE=openruntimes/node:${VERSION}-19.0
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="npm install"
      OPEN_RUNTIMES_START_COMMAND="pm2 start src/server.js --no-daemon"
    - RUNTIME=node-18.0
      TEST_CLASS=Base
      ENTRYPOINT=tests.js
      IMAGE=openruntimes/node:${VERSION}-18.0
      ARCH=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="npm install"
      OPEN_RUNTIMES_START_COMMAND="pm2 start src/server.js --no-daemon"
    - RUNTIME=node-18.0
      TEST_CLASS=Base
      ENTRYPOINT=tests.mjs
      IMAGE=openruntimes/node:${VERSION}-18.0
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="npm install"
      OPEN_RUNTIMES_START_COMMAND="pm2 start src/server.js --no-daemon"
    - RUNTIME=node-16.0
      TEST_CLASS=Base
      ENTRYPOINT=tests.js
      IMAGE=openruntimes/node:${VERSION}-16.0
      ARCH=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="npm install"
      OPEN_RUNTIMES_START_COMMAND="pm2 start src/server.js --no-daemon"
    - RUNTIME=node-16.0
      TEST_CLASS=Base
      ENTRYPOINT=tests.mjs
      IMAGE=openruntimes/node:${VERSION}-16.0
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="npm install"
      OPEN_RUNTIMES_START_COMMAND="pm2 start src/server.js --no-daemon"
    - RUNTIME=node-14.5
      TEST_CLASS=Base
      ENTRYPOINT=tests.js
      IMAGE=openruntimes/node:${VERSION}-14.5
      ARCH=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="npm install"
      OPEN_RUNTIMES_START_COMMAND="pm2 start src/server.js --no-daemon"
    - RUNTIME=node-14.5
      TEST_CLASS=Base
      ENTRYPOINT=tests.mjs
      IMAGE=openruntimes/node:${VERSION}-14.5
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="npm install"
      OPEN_RUNTIMES_START_COMMAND="pm2 start src/server.js --no-daemon"

    # Deno
    - RUNTIME=deno-1.35
      TEST_CLASS=Base
      ENTRYPOINT=tests.ts
      IMAGE=openruntimes/deno:${VERSION}-1.35
      ARCH=linux/amd64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="deno cache tests.ts"
      OPEN_RUNTIMES_START_COMMAND="denon start"
    - RUNTIME=deno-1.24
      TEST_CLASS=Base
      ENTRYPOINT=tests.ts
      IMAGE=openruntimes/deno:${VERSION}-1.24
      ARCH=linux/amd64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="deno cache tests.ts"
      OPEN_RUNTIMES_START_COMMAND="denon start"
    - RUNTIME=deno-1.21
      TEST_CLASS=Base
      ENTRYPOINT=tests.ts
      IMAGE=openruntimes/deno:${VERSION}-1.21
      ARCH=linux/amd64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="deno cache tests.ts"
      OPEN_RUNTIMES_START_COMMAND="denon start"

    # Python
    - RUNTIME=python-3.12
      TEST_CLASS=Base
      ENTRYPOINT=tests.py
      IMAGE=openruntimes/python:${VERSION}-3.12
      ARCH=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="pip install --no-cache-dir -r requirements.txt"
      OPEN_RUNTIMES_START_COMMAND="python3 src/server.py"
    - RUNTIME=python-3.11
      TEST_CLASS=Base
      ENTRYPOINT=tests.py
      IMAGE=openruntimes/python:${VERSION}-3.11
      ARCH=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="pip install --no-cache-dir -r requirements.txt"
      OPEN_RUNTIMES_START_COMMAND="python3 src/server.py"
    - RUNTIME=python-3.10
      TEST_CLASS=Base
      ENTRYPOINT=tests.py
      IMAGE=openruntimes/python:${VERSION}-3.10
      ARCH=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="pip install --no-cache-dir -r requirements.txt"
      OPEN_RUNTIMES_START_COMMAND="python3 src/server.py"
    - RUNTIME=python-3.9
      TEST_CLASS=Base
      ENTRYPOINT=tests.py
      IMAGE=openruntimes/python:${VERSION}-3.9
      ARCH=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="pip install --no-cache-dir -r requirements.txt"
      OPEN_RUNTIMES_START_COMMAND="python3 src/server.py"
    - RUNTIME=python-3.8
      TEST_CLASS=Base
      ENTRYPOINT=tests.py
      IMAGE=openruntimes/python:${VERSION}-3.8
      ARCH=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="pip install --no-cache-dir -r requirements.txt"
      OPEN_RUNTIMES_START_COMMAND="python3 src/server.py"

    # Dart
    - RUNTIME=dart-3.1
      TEST_CLASS=Base
      ENTRYPOINT=lib/tests.dart
      IMAGE=openruntimes/dart:${VERSION}-3.1
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="dart pub get"
      OPEN_RUNTIMES_START_COMMAND="src/function/server"
    - RUNTIME=dart-3.0
      TEST_CLASS=Base
      ENTRYPOINT=lib/tests.dart
      IMAGE=openruntimes/dart:${VERSION}-3.0
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="dart pub get"
      OPEN_RUNTIMES_START_COMMAND="src/function/server"
    - RUNTIME=dart-2.19
      TEST_CLASS=Base
      ENTRYPOINT=lib/tests.dart
      IMAGE=openruntimes/dart:${VERSION}-2.19
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="dart pub get"
      OPEN_RUNTIMES_START_COMMAND="src/function/server"
    - RUNTIME=dart-2.18
      TEST_CLASS=Base
      ENTRYPOINT=lib/tests.dart
      IMAGE=openruntimes/dart:${VERSION}-2.18
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="dart pub get"
      OPEN_RUNTIMES_START_COMMAND="src/function/server"
    - RUNTIME=dart-2.17
      TEST_CLASS=Base
      ENTRYPOINT=lib/tests.dart
      IMAGE=openruntimes/dart:${VERSION}-2.17
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="dart pub get"
      OPEN_RUNTIMES_START_COMMAND="src/function/server"
    - RUNTIME=dart-2.16
      TEST_CLASS=Base
      ENTRYPOINT=lib/tests.dart
      IMAGE=openruntimes/dart:${VERSION}-2.16
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="dart pub get"
      OPEN_RUNTIMES_START_COMMAND="src/function/server"
    - RUNTIME=dart-2.15
      TEST_CLASS=Base
      ENTRYPOINT=lib/tests.dart
      IMAGE=openruntimes/dart:${VERSION}-2.15
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="dart pub get"
      OPEN_RUNTIMES_START_COMMAND="src/function/server"

    # Ruby
    - RUNTIME=ruby-3.2
      TEST_CLASS=Base
      ENTRYPOINT=tests.rb
      IMAGE=openruntimes/ruby:${VERSION}-3.2
      ARCH=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND=""
      OPEN_RUNTIMES_START_COMMAND="bundle exec puma -b tcp://0.0.0.0:3000 -e production"
    - RUNTIME=ruby-3.1
      TEST_CLASS=Base
      ENTRYPOINT=tests.rb
      IMAGE=openruntimes/ruby:${VERSION}-3.1
      ARCH=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND=""
      OPEN_RUNTIMES_START_COMMAND="bundle exec puma -b tcp://0.0.0.0:3000 -e production"
    - RUNTIME=ruby-3.0
      TEST_CLASS=Base
      ENTRYPOINT=tests.rb
      IMAGE=openruntimes/ruby:${VERSION}-3.0
      ARCH=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND=""
      OPEN_RUNTIMES_START_COMMAND="bundle exec puma -b tcp://0.0.0.0:3000 -e production"

    # PHP
    - RUNTIME=php-8.2
      TEST_CLASS=Base
      ENTRYPOINT=tests.php
      IMAGE=openruntimes/php:${VERSION}-8.2
      ARCH=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="composer update --no-interaction --ignore-platform-reqs --optimize-autoloader --prefer-dist --no-dev"
      OPEN_RUNTIMES_START_COMMAND="php src/server.php"
    - RUNTIME=php-8.1
      TEST_CLASS=Base
      ENTRYPOINT=tests.php
      IMAGE=openruntimes/php:${VERSION}-8.1
      ARCH=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="composer update --no-interaction --ignore-platform-reqs --optimize-autoloader --prefer-dist --no-dev"
      OPEN_RUNTIMES_START_COMMAND="php src/server.php"
    - RUNTIME=php-8.0
      TEST_CLASS=Base
      ENTRYPOINT=tests.php
      IMAGE=openruntimes/php:${VERSION}-8.0
      ARCH=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="composer update --no-interaction --ignore-platform-reqs --optimize-autoloader --prefer-dist --no-dev"
      OPEN_RUNTIMES_START_COMMAND="php src/server.php"

    # Swift
    - RUNTIME=swift-5.8
      TEST_CLASS=Base
      ENTRYPOINT=Tests.swift
      IMAGE=openruntimes/swift:${VERSION}-5.8
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND=""
      OPEN_RUNTIMES_START_COMMAND="src/function/Runtime serve --env production --hostname 0.0.0.0 --port 3000"
    - RUNTIME=swift-5.5
      TEST_CLASS=Base
      ENTRYPOINT=Tests.swift
      IMAGE=openruntimes/swift:${VERSION}-5.5
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND=""
      OPEN_RUNTIMES_START_COMMAND="src/function/Runtime serve --env production --hostname 0.0.0.0 --port 3000"

    # Kotlin
    - RUNTIME=kotlin-1.6
      TEST_CLASS=Base
      ENTRYPOINT=Tests.kt
      IMAGE=openruntimes/kotlin:${VERSION}-1.6
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND=""
      OPEN_RUNTIMES_START_COMMAND="java -jar src/function/kotlin-runtime-1.0.0.jar"
    - RUNTIME=kotlin-1.8
      TEST_CLASS=Base
      ENTRYPOINT=Tests.kt
      IMAGE=openruntimes/kotlin:${VERSION}-1.8
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND=""
      OPEN_RUNTIMES_START_COMMAND="java -jar src/function/kotlin-runtime-1.0.0.jar"

    # Java
    - RUNTIME=java-18.0
      TEST_CLASS=Base
      ENTRYPOINT=Tests.java
      IMAGE=openruntimes/java:${VERSION}-18.0
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND=""
      OPEN_RUNTIMES_START_COMMAND="java -jar src/function/java-runtime-1.0.0.jar"
    - RUNTIME=java-17.0
      TEST_CLASS=Base
      ENTRYPOINT=Tests.java
      IMAGE=openruntimes/java:${VERSION}-17.0
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND=""
      OPEN_RUNTIMES_START_COMMAND="java -jar src/function/java-runtime-1.0.0.jar"
    - RUNTIME=java-11.0
      TEST_CLASS=Base
      ENTRYPOINT=Tests.java
      IMAGE=openruntimes/java:${VERSION}-11.0
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND=""
      OPEN_RUNTIMES_START_COMMAND="java -jar src/function/java-runtime-1.0.0.jar"
    - RUNTIME=java-8.0
      TEST_CLASS=Base
      ENTRYPOINT=Tests.java
      IMAGE=openruntimes/java:${VERSION}-8.0
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND=""
      OPEN_RUNTIMES_START_COMMAND="java -jar src/function/java-runtime-1.0.0.jar"

    # C++
    - RUNTIME=cpp-17
      TEST_CLASS=Base
      ENTRYPOINT=tests.cc
      IMAGE=openruntimes/cpp:${VERSION}-17
      ARCH=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND=""
      OPEN_RUNTIMES_START_COMMAND="src/function/cpp_runtime"
    - RUNTIME=cpp-20
      TEST_CLASS=Base
      ENTRYPOINT=tests.cc
      IMAGE=openruntimes/cpp:${VERSION}-20
      ARCH=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND=""
      OPEN_RUNTIMES_START_COMMAND="src/function/cpp_runtime"

    # DotNet
    - RUNTIME=dotnet-8.0
      TEST_CLASS=Base
      ENTRYPOINT=Tests.cs
      IMAGE=openruntimes/dotnet:${VERSION}-8.0
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND=""
      OPEN_RUNTIMES_START_COMMAND="dotnet src/function/DotNetRuntime.dll"
    - RUNTIME=dotnet-7.0
      TEST_CLASS=Base
      ENTRYPOINT=Tests.cs
      IMAGE=openruntimes/dotnet:${VERSION}-7.0
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND=""
      OPEN_RUNTIMES_START_COMMAND="dotnet src/function/DotNetRuntime.dll"
    - RUNTIME=dotnet-6.0
      TEST_CLASS=Base
      ENTRYPOINT=Tests.cs
      IMAGE=openruntimes/dotnet:${VERSION}-6.0
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND=""
      OPEN_RUNTIMES_START_COMMAND="dotnet src/function/DotNetRuntime.dll"

    # Bun
    - RUNTIME=bun-1.0
      TEST_CLASS=Base
      ENTRYPOINT=tests.ts
      IMAGE=openruntimes/bun:${VERSION}-1.0
      ARCH=linux/amd64,linux/arm64
      TEST_SCRIPT=tests.sh
      OPEN_RUNTIMES_BUILD_COMMAND="bun install"
      OPEN_RUNTIMES_START_COMMAND="bun src/server.ts"

    # Go
    # - RUNTIME=go-1.19
    #   TEST_CLASS=Base
    #   ENTRYPOINT=tests.go
    #   IMAGE=openruntimes/go:${VERSION}-1.19
    #   ARCH=linux/amd64,linux/arm64
    #   TEST_SCRIPT=tests.sh

notifications:
  email:
    - team@appwrite.io

before_install:
  # Upgrade Docker
  - docker version
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
  - docker version
  # Login to Docker Hub
  - >
    if [ ! -z "${DOCKERHUB_PULL_USERNAME:-}" ]; then
      echo "${DOCKERHUB_PULL_PASSWORD}" | docker login --username "${DOCKERHUB_PULL_USERNAME}" --password-stdin
    fi
  # Install Docker buildx
  - mkdir -vp ~/.docker/cli-plugins/
  - curl --silent -L "https://github.com/docker/buildx/releases/download/v0.3.0/buildx-v0.3.0.linux-amd64" > ~/.docker/cli-plugins/docker-buildx
  - chmod a+x ~/.docker/cli-plugins/docker-buildx
  # Activate Docker buildx
  - docker buildx create --use

install:
  - docker version
  - composer install

script:
  - export OPEN_RUNTIMES_BUILD_COMMAND=${OPEN_RUNTIMES_BUILD_COMMAND}; export OPEN_RUNTIMES_START_COMMAND=${OPEN_RUNTIMES_START_COMMAND}; export RUNTIME=${RUNTIME}; export TEST_CLASS=${TEST_CLASS}; export ENTRYPOINT=${ENTRYPOINT}; sh ${TEST_SCRIPT}

deploy:
  - provider: script
    edge: true
    script: export RUNTIME=${RUNTIME}; ARCH=${ARCH}; export IMAGE=${IMAGE}; sh deploy.sh
    on:
      tags: true